defender_simple_py = '''
from battle import commander

defender = commander.Client()


def search_next_target(data, **kwargs):
    enemies = defender.ask_enemy_items_in_my_firing_range()
    if enemies:
        unit_in_firing_range(enemies[0])
    else:
        defender.subscribe_enemy_in_my_firing_range(unit_in_firing_range)


def unit_in_firing_range(data, **kwargs):
    defender.attack_item(data['id'])
    defender.subscribe_the_item_is_dead(data['id'], search_next_target)
    defender.subscribe_the_item_out_my_firing_range(data['id'], search_next_target)

defender.subscribe_enemy_in_my_firing_range(unit_in_firing_range)
'''

attacker_simple_py = '''
from battle import commander
from random import random
attacker = commander.Client()

def attack_next_enemy(data=None, **kawargs):
    enemy = attacker.ask_nearest_enemy()
    attacker.attack_item(enemy['id'])
    result = attacker.subscribe_the_item_is_dead(enemy['id'], attack_next_enemy)


def move_to_random(data=None):
    x, y = random() * 10, random() * 10
    attacker.move_to_point((x, y))
    attacker.subscribe_im_stop(attack_next_enemy)

# move_to_random()
attack_next_enemy()
'''

MAP_X = 2

map_one_defender = [
    {
        "player_id": 0,
        "role": "tower",
        "alias": "tower2",
        "type": "rifleTower",
        "tile_position": [22, 2],
        "size": 2,
        "rate_of_fire": 1,
        "damage_per_shot": 45,
        "firing_range": 10,
        "hit_points": 140,
        "level": 2,
        "status": "idle",  # current status
        "code": 0
    },
    {
        "player_id": 0,
        "role": "tower",
        "type": "rifleTower",
        "alias": "tower2",
        "tile_position": [22, 10],
        "size": 2,
        "rate_of_fire": 1,
        "damage_per_shot": 45,
        "firing_range": 10,
        "hit_points": 140,
        "level": 2,
        "status": "idle",
        "code": 0
    },

    {
        "player_id": 0,
        "alias": "cc-2",
        "type": "commandCenter",
        "role": "center",
        "tile_position": [21, 5],
        "size": 4,
        "hit_points": 1000,
        "level": 5,
        "status": "idle"
    },
    {
        "player_id": 0,
        "type": "laboratory",
        "role": "building",
        "alias": "laboratory-1",
        "tile_position": [26, 6],
        "size": 3,
        "hit_points": 500,
        "level": 2,
        "status": "idle"
    },
    {
        "player_id": 1,
        "type": "craft",
        "role": "craft",
        "alias": "craft1",
        "level": 2,
        "code": 1,
        "units": {
            "rate_of_fire": 5,
            "damage_per_shot": 30,
            "firing_range": 3,
            "speed": 6,
            "hit_points": 30,
            "type": "rifleMan"
        },
        "unit_quantity": 3
    },
    {
        "player_id": 1,
        "type": "craft",
        "role": "craft",
        "alias": "craft1",
        "level": 2,
        "code": 1,
        "units": {
            "rate_of_fire": 5,
            "damage_per_shot": 10,
            "firing_range": 1,
            "speed": 3,
            "hit_points": 30,
            "type": "rifleMan"
        },
        "unit_quantity": 3
    },
    {
        "type": "rock",
        "role": "obstacle",
        "alias": "superRockLeft",
        "tile_position": [0, 0],
        "size": 21,
        "hit_points": 9000000,
        "level": 1
    },
    {
        "type": "rock",
        "role": "obstacle",
        "alias": "superRockRight",
        "tile_position": [0, 20],
        "size": 21,
        "hit_points": 9000000,
        "level": 1
    },
]

PLAYERS = {
    'players': [
        {
            'id': 0,
            'env_name': 'python_3',
            'defeat': ['center'],
        },
        {
            'id': 1,
            'env_name': 'python_3',
            'defeat': ['units', 'time'],
        }
    ],
    'codes': [
        {
            "id": 0,
            "code": defender_simple_py
        },
        {
            "id": 1,
            "code": attacker_simple_py
        },
    ],
    'map_elements': map_one_defender,
    'map_size': (40, 40),
    'time_limit': 30,
    'is_stream': False
}